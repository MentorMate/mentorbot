name: build
on:
  push:
    branches: [main, release-*]
  pull_request:
    branches: [main, release-*]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 3
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 3.1.x
      - name: Setup .NET Core SDK 5
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Test with dotnet
        run: >
          dotnet test --no-restore -c Debug
          -l trx tests/MentorBot.Tests/MentorBot.Tests.csproj
          /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="../../TestResults/"
          /p:ExcludeByFile=\"../../src/MentorBot.Functions/Models/**/*.cs\"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Publish dotnet
        run: dotnet publish --no-restore -c Release src/MentorBot.Functions/MentorBot.Functions.csproj -o dist/
      - name: Publish angular
        run: npm run build:prod --prefix ./src/MentorBot.WebLearningCenter/ClientApp
      - name: Run front end lint
        run: npm run lint --prefix ./src/MentorBot.WebLearningCenter/ClientApp
      - name: Run front end tests
        run: npm run test:prod --prefix ./src/MentorBot.WebLearningCenter/ClientApp
      - name: Upload test coverage
        run: >
          bash <(curl -s https://codecov.io/bash)
          -t ${{ secrets.CODECOV_TOKEN }}
          -f TestResults/coverage.opencover.xml
          -f ./src/MentorBot.WebLearningCenter/ClientApp/coverage/coverage.lcov
      - name: Archive published app
        uses: papeloto/action-zip@v1
        with:
          files: dist/
          dest: app.zip
      - name: Azure Login
        run: az login -u ${{ secrets.AZ_USER }} -p ${{ secrets.AZ_SECRET }} -t ${{ secrets.AZ_TENANT }}
      - name: Deploy to azure
        run: >
          az functionapp deployment source config-zip
          --name mentorbot-app --resource-group mentorbot --branch main --src app.zip --subscription mentorbot
