name: build

on:
  push:
    branches: [main, release-*]
  pull_request:
    branches: [main, release-*]

jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 3
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 3.1.x
      - name: Setup .NET Core SDK 6
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true
      - name: Install dependencies
        run: dotnet restore
      - name: Test with dotnet
        run: >
          dotnet test --no-restore -c Debug
          -l trx tests/MentorBot.Tests/MentorBot.Tests.csproj
          /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="../../TestResults/"
          /p:ExcludeByFile=\"../../src/MentorBot.Functions/Models/**/*.cs\"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results
          path: TestResults
        if: ${{ always() }}
      - name: Upload test coverage
        run: >
          bash <(curl -s https://codecov.io/bash)
          -t ${{ secrets.CODECOV_TOKEN }}
          -f TestResults/coverage.opencover.xml
      - name: Build for deploy
        shell: bash
        run: dotnet publish src/MentorBot.Functions/MentorBot.Functions.csproj -c Release -o dist/
      - name: Archive published app
        uses: vimtor/action-zip@v1
        with:
          files: dist/
          dest: app.zip
      - uses: actions/upload-artifact@v2
        with:
          name: mentorbot-api-package
          path: app.zip
          retention-days: 30
  # for some reason the 'az functionapp deployment' do not work correctly in linux. So just deploy from windows.
  dotnet-deploy:
    needs: dotnet-build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: windows-latest
    env:
      AZURE_FUNCTIONAPP_NAME: mentorbot-app
      AZURE_GROUP_NAME: mentorbot
    steps:
      - name: Download api package
        uses: actions/download-artifact@v2
        with:
          name: mentorbot-api-package
      - name: Azure Login
        run: az login -u ${{ secrets.AZ_USER }} -p ${{ secrets.AZ_SECRET }} -t ${{ secrets.AZ_TENANT }}
      - name: Deploy to azure the API
        run: >
          az functionapp deployment source config-zip -n ${{ env.AZURE_FUNCTIONAPP_NAME }}
          -g ${{ env.AZURE_GROUP_NAME }} --src app.zip --subscription ${{ secrets.AZ_SUB }}
  ng-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
      - name: npm package install
        run: npm ci --prefix ./src/MentorBot.WebLearningCenter/ClientApp --cache ~/.npm --prefer-offline --no-audit --silent
      - name: Run front end lint
        run: npm run lint --prefix ./src/MentorBot.WebLearningCenter/ClientApp
        continue-on-error: true
      - name: Publish angular
        env:
          AZURE_WEB_PATH: ${{ secrets.AZURE_WEB_PATH }}
          AZURE_API_PATH: ${{ secrets.AZURE_API_PATH }}
          AZURE_CODE: ${{ secrets.AZURE_CODE }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        run: npm run build:prod --prefix ./src/MentorBot.WebLearningCenter/ClientApp
      - name: Run front end tests
        run: npm run test:prod --prefix ./src/MentorBot.WebLearningCenter/ClientApp
      - name: Upload test coverage
        run: >
          bash <(curl -s https://codecov.io/bash)
          -t ${{ secrets.CODECOV_TOKEN }}
          -f ./src/MentorBot.WebLearningCenter/ClientApp/coverage/coverage.lcov
      - name: Azure Login
        run: az login -u ${{ secrets.AZ_USER }} -p ${{ secrets.AZ_SECRET }} -t ${{ secrets.AZ_TENANT }}
      - name: Deploy the web app
        run: >
          # shellcheck disable=SC2016

          az storage blob upload-batch --account-name ${{ secrets.AZ_STORAGE }}
          -s ./src/MentorBot.WebLearningCenter/ClientApp/dist -d '$web' --subscription ${{ secrets.AZ_SUB }}
